{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Oblique;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\vieww12000\viewh15840\viewkind0
\deftab720
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\f0\b\fs32 \cf0 MongoDB, Mongoose\

\f1\b0 \
Mongoose can connect to localhost with MongoDB installed on local machine, or to Mongo Atlas (cloud managed by the company)\
\

\f0\b POST
\f1\b0  route create new instance of the schema and pass data through\
e.g. const product = new Product( \{\
	_id: new mongoose.Types.ObjectId( ),\
	name: req.body.name,\
	price: req.body.price \
\} );\

\f2\i Then call method on the new variable.\
\

\f1\i0 product\
	.save( ) // this method from mongoose will save the new variable to the DB\
	.then( res => \{ console.log( res ) \} ) // resolve promise\
	.catch( err => console.log( err ))\'df
\fs22 \
\
\pard\pardeftab720\sl276\slmult1\sa200\partightenfactor0

\fs32 \cf0  
\f0\b GET 
\f1\b0 route can retrieve data from the database\
e.g. const id = req.params.productId\
\
Product.findById( id )\
	.exec( ) // this function executes the query. findById will not execute by itself. Exec also returns a full-fledged promise.\
	.then( doc => \{ console.log( doc ) \} )\
	.catch( err => console.log( err ) )\

\f2\i note. findById( \{ id \}, ( err, data ) => \{ \} ) // will execute }